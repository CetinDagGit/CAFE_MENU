@model List<CAFE_MENU.Models.DTOs.ProductDTO>

@{
    ViewData["Title"] = "Products";
    Layout = "_AdminLayout";
    decimal UsdRate = (decimal)ViewData["UsdRate"];
}
<h2>Products</h2>
<a href="@Url.Action("AddProduct", "Product")" class="btn btn-success">Add New Product</a>

<table class="table">
    <thead>
        <tr>
            <th>ID</th>
            <th>Product Name</th>
            <th>Category</th>
            <th>Price TRY / USD</th>
            <th>Image</th>
            <th>Transactions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryName</td>
                <td>@product.Price ₺ / @string.Format("{0:0.00}", product.Price / UsdRate) $</td>

                <td>
                    @if (!string.IsNullOrEmpty(product.ImagePath))
                    {
                        <img src="@product.ImagePath" alt="Product Image" width="50" height="50" />
                    }
                    else
                    {
                        <span>No Image</span>
                    }
                </td>
                <td>
                    <a href="@Url.Action("UpdateProduct", "Product", new { id = product.ProductId.ToString() })" class="btn btn-warning">Edit</a>
                    <form asp-action="DeleteProduct" asp-controller="Product" method="post" style="display:inline;">
                        <input type="hidden" name="id" value="@product.ProductId.ToString()" />
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Bu ürünü silmek istediğinize emin misiniz?');">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
    {
        var currentPage = (int)ViewData["CurrentPage"];
        var totalPages = (int)ViewData["TotalPages"];


        if (currentPage > 1)
        {
            <a href="@Url.Action("Index", "Product", new { page = currentPage - 1 })" class="btn btn-primary">Previous</a>
        }
        if (currentPage < totalPages)
        {
            <a href="@Url.Action("Index", "Product", new { page = currentPage + 1 })" class="btn btn-primary">Next</a>
        }

        <p>Page @currentPage / @totalPages</p>
    }
</div>
